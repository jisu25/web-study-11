CREATE TABLE MEMBER (
	NAME	VARCHAR2(10),
	USERID	VARCHAR2(10),
	PWD		VARCHAR2(10),
	EMAIL	VARCHAR2(20),
	PHONE	CHAR(13),
	ADMIN	NUMBER(1) DEFAULT 0, -- 0: 사용자, 1: 관리자
	JOINDATE DATE DEFAULT sysdate,
	PRIMARY KEY(USERID)
);

ALTER TABLE "MEMBER"
MODIFY NAME VARCHAR2(20);

CREATE TABLE TITLE(
	TITLE_NO NUMBER PRIMARY KEY,
	TITLE_NAME VARCHAR2(40)
);

CREATE TABLE DEPARTMENT(
	DEPT_NO NUMBER PRIMARY KEY,
	DEPT_NAME VARCHAR2(40),
	FLOOR NUMBER(2)
);

-- EMPLOYEE 테이블 생성
CREATE TABLE EMPLOYEE (
   EMP_NO       NUMBER,
   EMP_NAME    VARCHAR2 (20),
   TNO       NUMBER DEFAULT 1,
   MANAGER    NUMBER,
   SALARY       NUMBER,
   DNO       NUMBER DEFAULT 1);
  
  
-- EMPLOYEE 테이블 생성
CREATE TABLE EMPLOYEE (
    EMP_NO   NUMBER,
    EMP_NAME VARCHAR2(20) NOT NULL,
    TNO      NUMBER,
    MANAGER  NUMBER,
    SALARY   NUMBER,
    DNO      NUMBER,
    EMAIL    varchar2(60) NOT NULL,
    PASSWD   varchar2(60) NOT NULL,
    REGDATE  DATE DEFAULT SYSDATE,
    TEL      char(13),
    pic_url  varchar2(100),
    CONSTRAINT EMPLOYEE_EMPNO_PK   PRIMARY KEY (EMP_NO),
    CONSTRAINT EMPLOYEE_TNO_FK     FOREIGN KEY (TNO)     REFERENCES TITLE(TITLE_NO) ON DELETE SET NULL, 
    CONSTRAINT EMPLOYEE_MANAGER_FK FOREIGN KEY (MANAGER) REFERENCES EMPLOYEE(EMP_NO),
    CONSTRAINT EMPLOYEE_SALARY_CK  CHECK (SALARY < 6000000),
    CONSTRAINT EMPLOYEE_DNO_FK     FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DEPT_NO) ON DELETE CASCADE
);

SELECT sysdate FROM dual;

SELECT * FROM MEMBER;
SELECT * FROM USER_TABLES;
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME IN ('MEMBER');
SELECT * FROM USER_CONSTRAINTS;



--------------------------------------

-- TRIGGER


CREATE TABLE product(
	code number(5) PRIMARY KEY,
	name varchar2(100),
	price number(8),
	pictureurl varchar(50),
	description varchar2(1000)
);


DROP SEQUENCE PRODUCT_SEQ;

CREATE SEQUENCE PRODUCT_SEQ
	START WITH 1
	INCREMENT BY 1;
	
CREATE OR REPLACE TRIGGER TRI_PRODUCT_CODE_AUTOSEQ
BEFORE INSERT ON PRODUCT
FOR EACH ROW
BEGIN
	IF Inserting AND :NEW.CODE IS NULL THEN
		SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.CODE FROM DUAL;
	END IF;
END;


